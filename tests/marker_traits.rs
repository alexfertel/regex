// DO NOT EDIT. Automatically generated by 'scripts/public-types-tests.py'
// on 2021-07-03 18:47:26.528306.

#[test]
fn marker_traits() {
    use std::panic::{RefUnwindSafe, UnwindSafe};

    fn assert_send<T: Send>() {}
    fn assert_sync<T: Sync>() {}
    fn assert_unwind_safe<T: UnwindSafe>() {}
    fn assert_ref_unwind_safe<T: RefUnwindSafe>() {}

    assert_send::<regex::bytes::RegexBuilder>();
    assert_sync::<regex::bytes::RegexBuilder>();
    assert_unwind_safe::<regex::bytes::RegexBuilder>();
    assert_ref_unwind_safe::<regex::bytes::RegexBuilder>();

    assert_send::<regex::bytes::RegexSetBuilder>();
    assert_sync::<regex::bytes::RegexSetBuilder>();
    assert_unwind_safe::<regex::bytes::RegexSetBuilder>();
    assert_ref_unwind_safe::<regex::bytes::RegexSetBuilder>();

    assert_send::<regex::bytes::Match>();
    assert_sync::<regex::bytes::Match>();
    assert_unwind_safe::<regex::bytes::Match>();
    assert_ref_unwind_safe::<regex::bytes::Match>();

    assert_send::<regex::bytes::Regex>();
    assert_sync::<regex::bytes::Regex>();
    assert_unwind_safe::<regex::bytes::Regex>();
    assert_ref_unwind_safe::<regex::bytes::Regex>();

    assert_send::<regex::bytes::Matches>();
    assert_unwind_safe::<regex::bytes::Matches>();
    assert_ref_unwind_safe::<regex::bytes::Matches>();

    assert_send::<regex::bytes::CaptureMatches>();
    assert_unwind_safe::<regex::bytes::CaptureMatches>();
    assert_ref_unwind_safe::<regex::bytes::CaptureMatches>();

    assert_send::<regex::bytes::Split>();
    assert_unwind_safe::<regex::bytes::Split>();
    assert_ref_unwind_safe::<regex::bytes::Split>();

    assert_send::<regex::bytes::SplitN>();
    assert_unwind_safe::<regex::bytes::SplitN>();
    assert_ref_unwind_safe::<regex::bytes::SplitN>();

    assert_send::<regex::bytes::CaptureNames>();
    assert_sync::<regex::bytes::CaptureNames>();
    assert_unwind_safe::<regex::bytes::CaptureNames>();
    assert_ref_unwind_safe::<regex::bytes::CaptureNames>();

    assert_send::<regex::bytes::CaptureLocations>();
    assert_sync::<regex::bytes::CaptureLocations>();
    assert_unwind_safe::<regex::bytes::CaptureLocations>();
    assert_ref_unwind_safe::<regex::bytes::CaptureLocations>();

    assert_send::<regex::bytes::Captures>();
    assert_sync::<regex::bytes::Captures>();
    assert_unwind_safe::<regex::bytes::Captures>();
    assert_ref_unwind_safe::<regex::bytes::Captures>();

    assert_send::<regex::bytes::SubCaptureMatches>();
    assert_sync::<regex::bytes::SubCaptureMatches>();
    assert_unwind_safe::<regex::bytes::SubCaptureMatches>();
    assert_ref_unwind_safe::<regex::bytes::SubCaptureMatches>();

    assert_send::<regex::bytes::ReplacerRef<[u8]>>();
    assert_sync::<regex::bytes::ReplacerRef<[u8]>>();
    assert_ref_unwind_safe::<regex::bytes::ReplacerRef<[u8]>>();

    assert_send::<regex::bytes::NoExpand>();
    assert_sync::<regex::bytes::NoExpand>();
    assert_unwind_safe::<regex::bytes::NoExpand>();
    assert_ref_unwind_safe::<regex::bytes::NoExpand>();

    assert_send::<regex::bytes::RegexSet>();
    assert_sync::<regex::bytes::RegexSet>();
    assert_unwind_safe::<regex::bytes::RegexSet>();
    assert_ref_unwind_safe::<regex::bytes::RegexSet>();

    assert_send::<regex::bytes::SetMatches>();
    assert_sync::<regex::bytes::SetMatches>();
    assert_unwind_safe::<regex::bytes::SetMatches>();
    assert_ref_unwind_safe::<regex::bytes::SetMatches>();

    assert_send::<regex::bytes::SetMatchesIntoIter>();
    assert_sync::<regex::bytes::SetMatchesIntoIter>();
    assert_unwind_safe::<regex::bytes::SetMatchesIntoIter>();
    assert_ref_unwind_safe::<regex::bytes::SetMatchesIntoIter>();

    assert_send::<regex::bytes::SetMatchesIter>();
    assert_sync::<regex::bytes::SetMatchesIter>();
    assert_unwind_safe::<regex::bytes::SetMatchesIter>();
    assert_ref_unwind_safe::<regex::bytes::SetMatchesIter>();

    assert_send::<regex::RegexSetBuilder>();
    assert_sync::<regex::RegexSetBuilder>();
    assert_unwind_safe::<regex::RegexSetBuilder>();
    assert_ref_unwind_safe::<regex::RegexSetBuilder>();

    assert_send::<regex::RegexBuilder>();
    assert_sync::<regex::RegexBuilder>();
    assert_unwind_safe::<regex::RegexBuilder>();
    assert_ref_unwind_safe::<regex::RegexBuilder>();

    assert_send::<regex::RegexSet>();
    assert_sync::<regex::RegexSet>();
    assert_unwind_safe::<regex::RegexSet>();
    assert_ref_unwind_safe::<regex::RegexSet>();

    assert_send::<regex::SetMatches>();
    assert_sync::<regex::SetMatches>();
    assert_unwind_safe::<regex::SetMatches>();
    assert_ref_unwind_safe::<regex::SetMatches>();

    assert_send::<regex::SetMatchesIntoIter>();
    assert_sync::<regex::SetMatchesIntoIter>();
    assert_unwind_safe::<regex::SetMatchesIntoIter>();
    assert_ref_unwind_safe::<regex::SetMatchesIntoIter>();

    assert_send::<regex::SetMatchesIter>();
    assert_sync::<regex::SetMatchesIter>();
    assert_unwind_safe::<regex::SetMatchesIter>();
    assert_ref_unwind_safe::<regex::SetMatchesIter>();

    assert_send::<regex::CaptureLocations>();
    assert_sync::<regex::CaptureLocations>();
    assert_unwind_safe::<regex::CaptureLocations>();
    assert_ref_unwind_safe::<regex::CaptureLocations>();

    assert_send::<regex::CaptureMatches>();
    assert_unwind_safe::<regex::CaptureMatches>();
    assert_ref_unwind_safe::<regex::CaptureMatches>();

    assert_send::<regex::CaptureNames>();
    assert_sync::<regex::CaptureNames>();
    assert_unwind_safe::<regex::CaptureNames>();
    assert_ref_unwind_safe::<regex::CaptureNames>();

    assert_send::<regex::Captures>();
    assert_sync::<regex::Captures>();
    assert_unwind_safe::<regex::Captures>();
    assert_ref_unwind_safe::<regex::Captures>();

    assert_send::<regex::Match>();
    assert_sync::<regex::Match>();
    assert_unwind_safe::<regex::Match>();
    assert_ref_unwind_safe::<regex::Match>();

    assert_send::<regex::Matches>();
    assert_unwind_safe::<regex::Matches>();
    assert_ref_unwind_safe::<regex::Matches>();

    assert_send::<regex::NoExpand>();
    assert_sync::<regex::NoExpand>();
    assert_unwind_safe::<regex::NoExpand>();
    assert_ref_unwind_safe::<regex::NoExpand>();

    assert_send::<regex::Regex>();
    assert_sync::<regex::Regex>();
    assert_unwind_safe::<regex::Regex>();
    assert_ref_unwind_safe::<regex::Regex>();

    assert_send::<regex::ReplacerRef<[u8]>>();
    assert_sync::<regex::ReplacerRef<[u8]>>();
    assert_ref_unwind_safe::<regex::ReplacerRef<[u8]>>();

    assert_send::<regex::Split>();
    assert_unwind_safe::<regex::Split>();
    assert_ref_unwind_safe::<regex::Split>();

    assert_send::<regex::SplitN>();
    assert_unwind_safe::<regex::SplitN>();
    assert_ref_unwind_safe::<regex::SplitN>();

    assert_send::<regex::SubCaptureMatches>();
    assert_sync::<regex::SubCaptureMatches>();
    assert_unwind_safe::<regex::SubCaptureMatches>();
    assert_ref_unwind_safe::<regex::SubCaptureMatches>();
}
